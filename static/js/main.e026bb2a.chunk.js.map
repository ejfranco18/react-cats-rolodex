{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-field/search-field.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","src","id","alt","name","email","CardList","props","monsters","map","SearchField","placeHolder","eventHandler","type","placeholder","onChange","App","state","searchField","fetch","then","response","json","data","setState","this","filterMonsters","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClB,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAQG,GAAlC,aAAiDC,IAAI,KAC7D,6BAAKJ,EAAQK,OACb,4BAAIL,EAAQM,YCHHC,EAAW,SAAAC,GAAK,OAC3B,qBAAKP,UAAU,YAAf,SACGO,EAAMC,SAASC,KAAI,SAAAV,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,UCJZQ,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACzB,uBAAOZ,UAAU,SACfa,KAAK,SACLC,YAAcH,EACdI,SAAWH,MCkCAI,E,kDAlCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXT,SAAU,GACVU,YAAa,IALJ,E,qDAUb,WAAqB,IAAD,OAClBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAAChB,SAAUe,S,oBAGzC,WAAU,IAAD,SAC2BE,KAAKR,MAA/BT,EADD,EACCA,SAAUU,EADX,EACWA,YACZQ,EAAiBlB,EAASmB,QAAO,SAAA5B,GAAO,OAC5CA,EAAQK,KAAKwB,cAAcC,SAASX,EAAYY,wBAElD,OACE,sBAAK9B,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CACEW,YAAc,cACdC,aAAiB,SAAAmB,GAAC,OAAI,EAAKP,SAAS,CAACN,YAAaa,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAUzB,SAAWkB,W,GA9BXQ,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e026bb2a.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = ({ monster }) => (\n  <div className='card'>\n    <img src={`https://robohash.org/${monster.id}?set=set4`} alt=\"\"/>\n    <h3>{monster.name}</h3>\n    <p>{monster.email}</p>\n  </div>\n);\n","import React from 'react';\nimport './card-list.styles.css';\nimport { Card } from '../card/card.component'\n\nexport const CardList = props => (\n  <div className='card-list'>\n    {props.monsters.map(monster => (\n      <Card key={monster.id} monster={monster}/>\n    ))}\n  </div>\n);\n","import React from 'react';\nimport './search-field.styles.css';\n\nexport const SearchField = ({ placeHolder, eventHandler }) => (\n  <input className='search'\n    type='search'\n    placeholder={ placeHolder }\n    onChange={ eventHandler }>\n  </input>\n);\n","import './App.css';\nimport { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchField } from './components/search-field/search-field.component';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(data => this.setState({monsters: data}))\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filterMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    )\n    return (\n      <div className=\"App\">\n        <h1>Cats Rolodex</h1>\n        <SearchField \n          placeHolder = 'Search cats'\n          eventHandler = { e => this.setState({searchField: e.target.value})}\n        />\n        <CardList monsters= {filterMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}